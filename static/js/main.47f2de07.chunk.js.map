{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Header","AppNameComponent","AppIcon","img","SearchIcon","SearchComponent","SearchInput","input","FoodListContainer","FoodContainer","App","useState","timeoutId","setTimeOutId","foodList","setFoodList","fetchAPI","searchtext","a","axios","get","resp","console","log","data","hits","FoodComponent","food","src","image","loading","lazy","label","color","onClick","window","open","url","placeholder","onChange","event","clearTimeout","timeout","setTimeout","target","value","length","map","recipe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAIMA,EAAYC,IAAOC,IAAV,+HAQTC,EAASF,IAAOC,IAAV,+QAaNE,EAAmBH,IAAOC,IAAV,gEAKhBG,EAAUJ,IAAOK,IAAV,+DAKPC,EAAaN,IAAOK,IAAV,uDAKVE,EAAkBP,IAAOC,IAAV,yIASfO,EAAcR,IAAOS,MAAV,gHAQXC,EAAoBV,IAAOC,IAAV,0IASjBU,EAAgBX,IAAOC,IAAV,+HAwEJW,MA/Df,WAEE,IAGA,EAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEbC,IAAMC,IAAN,0CAA6CH,EAA7C,mBARW,WAQX,oBAPY,qCAKC,OACTI,EADS,OAMfC,QAAQC,IAAIF,GACZN,EAAYM,EAAKG,KAAKC,MAPP,2CAAH,sDAgBRC,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,eAAClB,EAAD,WACE,qBAAKmB,IAAKD,EAAKE,MAAOC,QAASC,SAC/B,+BACGJ,EAAKK,QAER,+CAGA,sBAAMC,MAAM,OAAOC,QAAS,kBAAMC,OAAOC,KAAKT,EAAKU,MAAnD,iCAQN,OACE,eAACxC,EAAD,WACE,eAACG,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAS0B,IAAI,iBADf,yBAIA,eAACvB,EAAD,WACE,cAACD,EAAD,CAAYwB,IAAI,qBAChB,cAACtB,EAAD,CAAagC,YAAY,SAASC,SAjCrB,SAACC,GACpBC,aAAa7B,GACb,IAAM8B,EAAUC,YAAW,kBAAM3B,EAASwB,EAAMI,OAAOC,SAAQ,KAC/DhC,EAAa6B,YAiCX,cAAClC,EAAD,UACGM,EAASgC,QAAUhC,EAASiC,KAAI,SAACpB,GAAD,OAC/B,cAACD,EAAD,CAAeC,KAAMA,EAAKqB,kBCvHrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.47f2de07.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { lazy, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap:wrap;\n  // background-color: #dec49b;\n\n`;\n\nconst Header = styled.div`\n  color: #e88901;\n  background-color: #f9f8f9;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n`;\n\nconst AppNameComponent = styled.div`\ndisplay:flex;\nalign-items:center;\n`;\n\nconst AppIcon = styled.img`\n  width: 120px;\n  height: 120px;\n`;\n\nconst SearchIcon = styled.img`\nwidth:36px;\nheight:36px;\n`;\n\nconst SearchComponent = styled.div`\ndisplay:flex;\nflex-direction:row;\nbackground-color:white;\npadding:10px;\nborder-radius:10px;\nwidth:50%;\n`;\n\nconst SearchInput = styled.input`\nborder:none;\noutline:none;\nmargin-left:15px;\nfont-size:16px;\nfont-weight:bold;\n`;\n\nconst FoodListContainer = styled.div`\ndisplay:flex;\nflex-direction:row;\nflex-wrap:wrap;\npadding:30px;\ngap:20px;\njustify-content:space-evenly;\n`;\n\nconst FoodContainer = styled.div`\ndisplay:flex;\nflex-direction:column;\npadding:10px;\nwidth:300px;\nbox-shadow:0 3px 10px 0 #aaa;\n`;\n\n\nfunction App() {\n\n  const APP_ID = \"a52b4d43\";\n  const APP_KEY = \"e0e5c667605f5e91d8275c973531b80a\";\n\n  const [timeoutId, setTimeOutId] = useState();\n  const [foodList, setFoodList] = useState([]);\n\n  const fetchAPI = async (searchtext) => {\n    const resp = await\n      axios.get(`https://api.edamam.com/search?q=${searchtext}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    // .then(function (resp) {\n    //   console.log(resp)\n    // })\n    console.log(resp);\n    setFoodList(resp.data.hits);\n  }\n\n  const onTextChange = (event) => {\n    clearTimeout(timeoutId);\n    const timeout = setTimeout(() => fetchAPI(event.target.value), 500);\n    setTimeOutId(timeout);\n  }\n\n  const FoodComponent = ({ food }) => {\n    return (\n      <FoodContainer>\n        <img src={food.image} loading={lazy} />\n        <span>\n          {food.label}\n        </span>\n        <span>\n          ingredients\n        </span>\n        <span color=\"blue\" onClick={() => window.open(food.url)}>\n          see more recipe\n        </span>\n\n      </FoodContainer>\n    )\n  }\n\n  return (\n    <Container>\n      <Header>\n        <AppNameComponent>\n          <AppIcon src=\"/mohinga.png\" />\n          Burmese Food Finder\n        </AppNameComponent>\n        <SearchComponent>\n          <SearchIcon src=\"/search-icon.svg\" />\n          <SearchInput placeholder=\"search\" onChange={onTextChange} />\n        </SearchComponent>\n      </Header>\n      <FoodListContainer>\n        {foodList.length && foodList.map((food) => (\n          <FoodComponent food={food.recipe} />\n        ))}\n      </FoodListContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}